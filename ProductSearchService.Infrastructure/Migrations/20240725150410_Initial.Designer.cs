// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ProductSearchService.Infrastructure;

#nullable disable

namespace ProductSearchService.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240725150410_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ProductSearchService.Domain.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Barcode")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)");

                    b.Property<string>("Image")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3657192b-8bf1-41cc-aa7e-27fb13b0542c"),
                            Barcode = "WAUSH78E87A574664",
                            Name = "Shampoo Hidratante"
                        },
                        new
                        {
                            Id = new Guid("a6528c65-5d6d-4560-ad59-70703ed98e45"),
                            Barcode = "1G6AS5S32F0858696",
                            Name = "Condicionador Nutritivo"
                        },
                        new
                        {
                            Id = new Guid("8cea0461-31a2-4146-a936-cc881f97eeab"),
                            Barcode = "4A31K5DFXAE659389",
                            Name = "Creme para Pentear"
                        },
                        new
                        {
                            Id = new Guid("11d951a4-d47d-4493-a65e-37edabf8f488"),
                            Barcode = "3C63D3DL8CG122197",
                            Name = "Gel Fixador"
                        },
                        new
                        {
                            Id = new Guid("f846a46b-64a3-4fb9-b88b-9e1da3b25fa7"),
                            Barcode = "1N6AF0LYXFN674122",
                            Name = "Mousse Modelador"
                        },
                        new
                        {
                            Id = new Guid("56aae860-62f1-420e-8449-2d62df55a6e4"),
                            Barcode = "JM3KE2BE6F0509041",
                            Name = "Óleo Reparador"
                        },
                        new
                        {
                            Id = new Guid("eabc1500-7d32-488b-9051-c062c9b23ad0"),
                            Barcode = "WAUBFAFL7CN345965",
                            Name = "Serum Anti-Frizz"
                        },
                        new
                        {
                            Id = new Guid("97ecdc35-621e-46fd-a280-f34e00ce3340"),
                            Barcode = "SCBDR33WX9C881684",
                            Name = "Máscara Capilar"
                        },
                        new
                        {
                            Id = new Guid("2c82cde0-f5c8-408b-8959-9b2ddd61618d"),
                            Barcode = "WP0CB2A81FK737485",
                            Name = "Tônico Capilar"
                        },
                        new
                        {
                            Id = new Guid("42f7d306-4435-4d84-abce-ace14095800b"),
                            Barcode = "2C3CDXJG5CH817619",
                            Name = "Leave-in Condicionante"
                        });
                });

            modelBuilder.Entity("ProductSearchService.Domain.Supermarket", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("Supermarket");

                    b.HasData(
                        new
                        {
                            Id = new Guid("34d678a1-ade5-4f3c-8b4c-bf92a78a1234"),
                            Name = "Continente"
                        },
                        new
                        {
                            Id = new Guid("34e60c09-7b61-4cb4-97e3-0bd03f02f80b"),
                            Name = "Pingo Doce"
                        },
                        new
                        {
                            Id = new Guid("0149b95c-2857-445f-a0dd-16d591278e46"),
                            Name = "Lidl"
                        },
                        new
                        {
                            Id = new Guid("1aaa883e-2b3d-4b0b-bad2-f696431067e2"),
                            Name = "Auchan"
                        },
                        new
                        {
                            Id = new Guid("e4a32804-3206-48dc-8dcd-a455480bac2c"),
                            Name = "Intermarché"
                        },
                        new
                        {
                            Id = new Guid("a670b084-ae63-48c9-b248-7b997beaf486"),
                            Name = "Minipreço"
                        },
                        new
                        {
                            Id = new Guid("90c8513a-181c-4abd-a855-9864ecc044d8"),
                            Name = "Aldi"
                        },
                        new
                        {
                            Id = new Guid("da98f9aa-afd6-444f-a3dd-92b7ab32cf5d"),
                            Name = "Mercadona"
                        });
                });

            modelBuilder.Entity("ProductSearchService.Domain.SupermarketProduct", b =>
                {
                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("SupermarketId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<int>("ProductQuantity")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("ProductId", "SupermarketId");

                    b.HasIndex("SupermarketId");

                    b.ToTable("SupermarketProduct");

                    b.HasData(
                        new
                        {
                            ProductId = new Guid("3657192b-8bf1-41cc-aa7e-27fb13b0542c"),
                            SupermarketId = new Guid("34d678a1-ade5-4f3c-8b4c-bf92a78a1234"),
                            CreatedOn = new DateTime(2024, 7, 25, 15, 4, 10, 26, DateTimeKind.Utc).AddTicks(9338),
                            Description = "Shampoo Hidratante - Continente",
                            Price = 4.99m,
                            ProductQuantity = 100
                        },
                        new
                        {
                            ProductId = new Guid("a6528c65-5d6d-4560-ad59-70703ed98e45"),
                            SupermarketId = new Guid("34e60c09-7b61-4cb4-97e3-0bd03f02f80b"),
                            CreatedOn = new DateTime(2024, 7, 25, 15, 4, 10, 26, DateTimeKind.Utc).AddTicks(9342),
                            Description = "Condicionador Nutritivo - Pingo Doce",
                            Price = 5.99m,
                            ProductQuantity = 150
                        },
                        new
                        {
                            ProductId = new Guid("8cea0461-31a2-4146-a936-cc881f97eeab"),
                            SupermarketId = new Guid("0149b95c-2857-445f-a0dd-16d591278e46"),
                            CreatedOn = new DateTime(2024, 7, 25, 15, 4, 10, 26, DateTimeKind.Utc).AddTicks(9343),
                            Description = "Creme para Pentear - Lidl",
                            Price = 3.99m,
                            ProductQuantity = 200
                        },
                        new
                        {
                            ProductId = new Guid("11d951a4-d47d-4493-a65e-37edabf8f488"),
                            SupermarketId = new Guid("1aaa883e-2b3d-4b0b-bad2-f696431067e2"),
                            CreatedOn = new DateTime(2024, 7, 25, 15, 4, 10, 26, DateTimeKind.Utc).AddTicks(9344),
                            Description = "Gel Fixador - Auchan",
                            Price = 6.49m,
                            ProductQuantity = 80
                        },
                        new
                        {
                            ProductId = new Guid("f846a46b-64a3-4fb9-b88b-9e1da3b25fa7"),
                            SupermarketId = new Guid("e4a32804-3206-48dc-8dcd-a455480bac2c"),
                            CreatedOn = new DateTime(2024, 7, 25, 15, 4, 10, 26, DateTimeKind.Utc).AddTicks(9346),
                            Description = "Mousse Modelador - Intermarché",
                            Price = 7.99m,
                            ProductQuantity = 120
                        },
                        new
                        {
                            ProductId = new Guid("56aae860-62f1-420e-8449-2d62df55a6e4"),
                            SupermarketId = new Guid("a670b084-ae63-48c9-b248-7b997beaf486"),
                            CreatedOn = new DateTime(2024, 7, 25, 15, 4, 10, 26, DateTimeKind.Utc).AddTicks(9347),
                            Description = "Óleo Reparador - Minipreço",
                            Price = 9.99m,
                            ProductQuantity = 60
                        },
                        new
                        {
                            ProductId = new Guid("eabc1500-7d32-488b-9051-c062c9b23ad0"),
                            SupermarketId = new Guid("90c8513a-181c-4abd-a855-9864ecc044d8"),
                            CreatedOn = new DateTime(2024, 7, 25, 15, 4, 10, 26, DateTimeKind.Utc).AddTicks(9348),
                            Description = "Serum Anti-Frizz - Aldi",
                            Price = 12.99m,
                            ProductQuantity = 90
                        },
                        new
                        {
                            ProductId = new Guid("97ecdc35-621e-46fd-a280-f34e00ce3340"),
                            SupermarketId = new Guid("da98f9aa-afd6-444f-a3dd-92b7ab32cf5d"),
                            CreatedOn = new DateTime(2024, 7, 25, 15, 4, 10, 26, DateTimeKind.Utc).AddTicks(9350),
                            Description = "Máscara Capilar - El Corte Inglés",
                            Price = 14.99m,
                            ProductQuantity = 110
                        },
                        new
                        {
                            ProductId = new Guid("2c82cde0-f5c8-408b-8959-9b2ddd61618d"),
                            SupermarketId = new Guid("34d678a1-ade5-4f3c-8b4c-bf92a78a1234"),
                            CreatedOn = new DateTime(2024, 7, 25, 15, 4, 10, 26, DateTimeKind.Utc).AddTicks(9351),
                            Description = "Tônico Capilar - E.Leclerc",
                            Price = 6.99m,
                            ProductQuantity = 130
                        },
                        new
                        {
                            ProductId = new Guid("42f7d306-4435-4d84-abce-ace14095800b"),
                            SupermarketId = new Guid("34e60c09-7b61-4cb4-97e3-0bd03f02f80b"),
                            CreatedOn = new DateTime(2024, 7, 25, 15, 4, 10, 26, DateTimeKind.Utc).AddTicks(9352),
                            Description = "Leave-in Condicionante - Mercadona",
                            Price = 11.99m,
                            ProductQuantity = 140
                        });
                });

            modelBuilder.Entity("ProductSearchService.Domain.SupermarketProduct", b =>
                {
                    b.HasOne("ProductSearchService.Domain.Product", "Product")
                        .WithMany("SupermarketProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProductSearchService.Domain.Supermarket", "Supermarket")
                        .WithMany("SupermarketProducts")
                        .HasForeignKey("SupermarketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Supermarket");
                });

            modelBuilder.Entity("ProductSearchService.Domain.Product", b =>
                {
                    b.Navigation("SupermarketProducts");
                });

            modelBuilder.Entity("ProductSearchService.Domain.Supermarket", b =>
                {
                    b.Navigation("SupermarketProducts");
                });
#pragma warning restore 612, 618
        }
    }
}
